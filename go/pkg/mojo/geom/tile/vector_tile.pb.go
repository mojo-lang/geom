// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: mojo/geom/tile/vector_tile.proto

package tile

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VectorTile_GeomType int32

const (
	VectorTile_GEOM_TYPE_UNKNOWN    VectorTile_GeomType = 0
	VectorTile_GEOM_TYPE_POINT      VectorTile_GeomType = 1
	VectorTile_GEOM_TYPE_LINESTRING VectorTile_GeomType = 2
	VectorTile_GEOM_TYPE_POLYGON    VectorTile_GeomType = 3
)

// Enum value maps for VectorTile_GeomType.
var (
	VectorTile_GeomType_name = map[int32]string{
		0: "GEOM_TYPE_UNKNOWN",
		1: "GEOM_TYPE_POINT",
		2: "GEOM_TYPE_LINESTRING",
		3: "GEOM_TYPE_POLYGON",
	}
	VectorTile_GeomType_value = map[string]int32{
		"GEOM_TYPE_UNKNOWN":    0,
		"GEOM_TYPE_POINT":      1,
		"GEOM_TYPE_LINESTRING": 2,
		"GEOM_TYPE_POLYGON":    3,
	}
)

func (x VectorTile_GeomType) Enum() *VectorTile_GeomType {
	p := new(VectorTile_GeomType)
	*p = x
	return p
}

func (x VectorTile_GeomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VectorTile_GeomType) Descriptor() protoreflect.EnumDescriptor {
	return file_mojo_geom_tile_vector_tile_proto_enumTypes[0].Descriptor()
}

func (VectorTile_GeomType) Type() protoreflect.EnumType {
	return &file_mojo_geom_tile_vector_tile_proto_enumTypes[0]
}

func (x VectorTile_GeomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VectorTile_GeomType.Descriptor instead.
func (VectorTile_GeomType) EnumDescriptor() ([]byte, []int) {
	return file_mojo_geom_tile_vector_tile_proto_rawDescGZIP(), []int{0, 0}
}

type VectorTile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers []*VectorTile_Layer `protobuf:"bytes,3,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *VectorTile) Reset() {
	*x = VectorTile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorTile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorTile) ProtoMessage() {}

func (x *VectorTile) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorTile.ProtoReflect.Descriptor instead.
func (*VectorTile) Descriptor() ([]byte, []int) {
	return file_mojo_geom_tile_vector_tile_proto_rawDescGZIP(), []int{0}
}

func (x *VectorTile) GetLayers() []*VectorTile_Layer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type VectorTile_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringValue string  `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3" json:"stringValue,omitempty"`
	FloatValue  float32 `protobuf:"fixed32,2,opt,name=float_value,json=floatValue,proto3" json:"floatValue,omitempty"`
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3" json:"doubleValue,omitempty"`
	IntValue    int64   `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3" json:"intValue,omitempty"`
	UintValue   uint64  `protobuf:"varint,5,opt,name=uint_value,json=uintValue,proto3" json:"uintValue,omitempty"`
	SintValue   int64   `protobuf:"varint,6,opt,name=sint_value,json=sintValue,proto3" json:"sintValue,omitempty"`
	BoolValue   bool    `protobuf:"varint,7,opt,name=bool_value,json=boolValue,proto3" json:"boolValue,omitempty"`
}

func (x *VectorTile_Value) Reset() {
	*x = VectorTile_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorTile_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorTile_Value) ProtoMessage() {}

func (x *VectorTile_Value) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorTile_Value.ProtoReflect.Descriptor instead.
func (*VectorTile_Value) Descriptor() ([]byte, []int) {
	return file_mojo_geom_tile_vector_tile_proto_rawDescGZIP(), []int{0, 0}
}

func (x *VectorTile_Value) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *VectorTile_Value) GetFloatValue() float32 {
	if x != nil {
		return x.FloatValue
	}
	return 0
}

func (x *VectorTile_Value) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *VectorTile_Value) GetIntValue() int64 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

func (x *VectorTile_Value) GetUintValue() uint64 {
	if x != nil {
		return x.UintValue
	}
	return 0
}

func (x *VectorTile_Value) GetSintValue() int64 {
	if x != nil {
		return x.SintValue
	}
	return 0
}

func (x *VectorTile_Value) GetBoolValue() bool {
	if x != nil {
		return x.BoolValue
	}
	return false
}

type VectorTile_Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tags     []uint32            `protobuf:"varint,2,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	Type     VectorTile_GeomType `protobuf:"varint,3,opt,name=type,proto3,enum=mojo.geom.tile.VectorTile_GeomType" json:"type,omitempty"`
	Geometry []uint32            `protobuf:"varint,4,rep,packed,name=geometry,proto3" json:"geometry,omitempty"`
}

func (x *VectorTile_Feature) Reset() {
	*x = VectorTile_Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorTile_Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorTile_Feature) ProtoMessage() {}

func (x *VectorTile_Feature) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorTile_Feature.ProtoReflect.Descriptor instead.
func (*VectorTile_Feature) Descriptor() ([]byte, []int) {
	return file_mojo_geom_tile_vector_tile_proto_rawDescGZIP(), []int{0, 1}
}

func (x *VectorTile_Feature) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VectorTile_Feature) GetTags() []uint32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VectorTile_Feature) GetType() VectorTile_GeomType {
	if x != nil {
		return x.Type
	}
	return VectorTile_GEOM_TYPE_UNKNOWN
}

func (x *VectorTile_Feature) GetGeometry() []uint32 {
	if x != nil {
		return x.Geometry
	}
	return nil
}

type VectorTile_Layer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  uint32                `protobuf:"varint,15,opt,name=version,proto3" json:"version,omitempty"`
	Name     string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Features []*VectorTile_Feature `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
	Keys     []string              `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys,omitempty"`
	Values   []*VectorTile_Value   `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	Extent   uint32                `protobuf:"varint,5,opt,name=extent,proto3" json:"extent,omitempty"`
}

func (x *VectorTile_Layer) Reset() {
	*x = VectorTile_Layer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VectorTile_Layer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VectorTile_Layer) ProtoMessage() {}

func (x *VectorTile_Layer) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_geom_tile_vector_tile_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VectorTile_Layer.ProtoReflect.Descriptor instead.
func (*VectorTile_Layer) Descriptor() ([]byte, []int) {
	return file_mojo_geom_tile_vector_tile_proto_rawDescGZIP(), []int{0, 2}
}

func (x *VectorTile_Layer) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *VectorTile_Layer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VectorTile_Layer) GetFeatures() []*VectorTile_Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *VectorTile_Layer) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *VectorTile_Layer) GetValues() []*VectorTile_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *VectorTile_Layer) GetExtent() uint32 {
	if x != nil {
		return x.Extent
	}
	return 0
}

var File_mojo_geom_tile_vector_tile_proto protoreflect.FileDescriptor

var file_mojo_geom_tile_vector_tile_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x74, 0x69, 0x6c, 0x65,
	0x2f, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x74, 0x69,
	0x6c, 0x65, 0x22, 0xfd, 0x05, 0x0a, 0x0a, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6c,
	0x65, 0x12, 0x38, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x74, 0x69,
	0x6c, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6c, 0x65, 0x2e, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a, 0xe8, 0x01, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x69, 0x6e,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75,
	0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x74,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d,
	0x2e, 0x74, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6c, 0x65,
	0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x1a, 0xdb, 0x01, 0x0a, 0x05,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f,
	0x6d, 0x2e, 0x74, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6c,
	0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67,
	0x65, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6c, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54,
	0x69, 0x6c, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x08, 0x47, 0x65, 0x6f,
	0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x4f, 0x4d, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x47, 0x45, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x45, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x49, 0x4e, 0x45, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x47,
	0x45, 0x4f, 0x4d, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x47, 0x4f, 0x4e,
	0x10, 0x03, 0x42, 0x66, 0x0a, 0x1b, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x74, 0x69, 0x6c,
	0x65, 0x42, 0x0f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d,
	0x2f, 0x74, 0x69, 0x6c, 0x65, 0x3b, 0x74, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mojo_geom_tile_vector_tile_proto_rawDescOnce sync.Once
	file_mojo_geom_tile_vector_tile_proto_rawDescData = file_mojo_geom_tile_vector_tile_proto_rawDesc
)

func file_mojo_geom_tile_vector_tile_proto_rawDescGZIP() []byte {
	file_mojo_geom_tile_vector_tile_proto_rawDescOnce.Do(func() {
		file_mojo_geom_tile_vector_tile_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_geom_tile_vector_tile_proto_rawDescData)
	})
	return file_mojo_geom_tile_vector_tile_proto_rawDescData
}

var file_mojo_geom_tile_vector_tile_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mojo_geom_tile_vector_tile_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mojo_geom_tile_vector_tile_proto_goTypes = []interface{}{
	(VectorTile_GeomType)(0),   // 0: mojo.geom.tile.VectorTile.GeomType
	(*VectorTile)(nil),         // 1: mojo.geom.tile.VectorTile
	(*VectorTile_Value)(nil),   // 2: mojo.geom.tile.VectorTile.Value
	(*VectorTile_Feature)(nil), // 3: mojo.geom.tile.VectorTile.Feature
	(*VectorTile_Layer)(nil),   // 4: mojo.geom.tile.VectorTile.Layer
}
var file_mojo_geom_tile_vector_tile_proto_depIdxs = []int32{
	4, // 0: mojo.geom.tile.VectorTile.layers:type_name -> mojo.geom.tile.VectorTile.Layer
	0, // 1: mojo.geom.tile.VectorTile.Feature.type:type_name -> mojo.geom.tile.VectorTile.GeomType
	3, // 2: mojo.geom.tile.VectorTile.Layer.features:type_name -> mojo.geom.tile.VectorTile.Feature
	2, // 3: mojo.geom.tile.VectorTile.Layer.values:type_name -> mojo.geom.tile.VectorTile.Value
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_mojo_geom_tile_vector_tile_proto_init() }
func file_mojo_geom_tile_vector_tile_proto_init() {
	if File_mojo_geom_tile_vector_tile_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mojo_geom_tile_vector_tile_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorTile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_geom_tile_vector_tile_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorTile_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_geom_tile_vector_tile_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorTile_Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mojo_geom_tile_vector_tile_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VectorTile_Layer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_geom_tile_vector_tile_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_geom_tile_vector_tile_proto_goTypes,
		DependencyIndexes: file_mojo_geom_tile_vector_tile_proto_depIdxs,
		EnumInfos:         file_mojo_geom_tile_vector_tile_proto_enumTypes,
		MessageInfos:      file_mojo_geom_tile_vector_tile_proto_msgTypes,
	}.Build()
	File_mojo_geom_tile_vector_tile_proto = out.File
	file_mojo_geom_tile_vector_tile_proto_rawDesc = nil
	file_mojo_geom_tile_vector_tile_proto_goTypes = nil
	file_mojo_geom_tile_vector_tile_proto_depIdxs = nil
}
