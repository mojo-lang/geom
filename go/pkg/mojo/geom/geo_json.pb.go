// Code generated by mojo. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.20.3
// source: mojo/geom/geo_json.proto

package geom

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeoJson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to GeoJson:
	//
	//	*GeoJson_Point
	//	*GeoJson_MultiPoint
	//	*GeoJson_LineString
	//	*GeoJson_MultiLineString
	//	*GeoJson_Polygon
	//	*GeoJson_MultiPolygon
	//	*GeoJson_GeometryCollection
	//	*GeoJson_Feature
	//	*GeoJson_FeatureCollection
	GeoJson isGeoJson_GeoJson `protobuf_oneof:"geo_json" json:"geoJson,omitempty"`
}

func (x *GeoJson) Reset() {
	*x = GeoJson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mojo_geom_geo_json_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoJson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoJson) ProtoMessage() {}

func (x *GeoJson) ProtoReflect() protoreflect.Message {
	mi := &file_mojo_geom_geo_json_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoJson.ProtoReflect.Descriptor instead.
func (*GeoJson) Descriptor() ([]byte, []int) {
	return file_mojo_geom_geo_json_proto_rawDescGZIP(), []int{0}
}

func (m *GeoJson) GetGeoJson() isGeoJson_GeoJson {
	if m != nil {
		return m.GeoJson
	}
	return nil
}

func (x *GeoJson) GetPoint() *Point {
	if x, ok := x.GetGeoJson().(*GeoJson_Point); ok {
		return x.Point
	}
	return nil
}

func (x *GeoJson) GetMultiPoint() *MultiPoint {
	if x, ok := x.GetGeoJson().(*GeoJson_MultiPoint); ok {
		return x.MultiPoint
	}
	return nil
}

func (x *GeoJson) GetLineString() *LineString {
	if x, ok := x.GetGeoJson().(*GeoJson_LineString); ok {
		return x.LineString
	}
	return nil
}

func (x *GeoJson) GetMultiLineString() *MultiLineString {
	if x, ok := x.GetGeoJson().(*GeoJson_MultiLineString); ok {
		return x.MultiLineString
	}
	return nil
}

func (x *GeoJson) GetPolygon() *Polygon {
	if x, ok := x.GetGeoJson().(*GeoJson_Polygon); ok {
		return x.Polygon
	}
	return nil
}

func (x *GeoJson) GetMultiPolygon() *MultiPolygon {
	if x, ok := x.GetGeoJson().(*GeoJson_MultiPolygon); ok {
		return x.MultiPolygon
	}
	return nil
}

func (x *GeoJson) GetGeometryCollection() *GeometryCollection {
	if x, ok := x.GetGeoJson().(*GeoJson_GeometryCollection); ok {
		return x.GeometryCollection
	}
	return nil
}

func (x *GeoJson) GetFeature() *Feature {
	if x, ok := x.GetGeoJson().(*GeoJson_Feature); ok {
		return x.Feature
	}
	return nil
}

func (x *GeoJson) GetFeatureCollection() *FeatureCollection {
	if x, ok := x.GetGeoJson().(*GeoJson_FeatureCollection); ok {
		return x.FeatureCollection
	}
	return nil
}

type isGeoJson_GeoJson interface {
	isGeoJson_GeoJson()
}

type GeoJson_Point struct {
	Point *Point `protobuf:"bytes,1,opt,name=point,proto3,oneof" json:"point,omitempty"`
}

type GeoJson_MultiPoint struct {
	MultiPoint *MultiPoint `protobuf:"bytes,2,opt,name=multi_point,json=multiPoint,proto3,oneof" json:"multiPoint,omitempty"`
}

type GeoJson_LineString struct {
	LineString *LineString `protobuf:"bytes,3,opt,name=line_string,json=lineString,proto3,oneof" json:"lineString,omitempty"`
}

type GeoJson_MultiLineString struct {
	MultiLineString *MultiLineString `protobuf:"bytes,4,opt,name=multi_line_string,json=multiLineString,proto3,oneof" json:"multiLineString,omitempty"`
}

type GeoJson_Polygon struct {
	Polygon *Polygon `protobuf:"bytes,5,opt,name=polygon,proto3,oneof" json:"polygon,omitempty"`
}

type GeoJson_MultiPolygon struct {
	MultiPolygon *MultiPolygon `protobuf:"bytes,6,opt,name=multi_polygon,json=multiPolygon,proto3,oneof" json:"multiPolygon,omitempty"`
}

type GeoJson_GeometryCollection struct {
	GeometryCollection *GeometryCollection `protobuf:"bytes,7,opt,name=geometry_collection,json=geometryCollection,proto3,oneof" json:"geometryCollection,omitempty"`
}

type GeoJson_Feature struct {
	Feature *Feature `protobuf:"bytes,10,opt,name=feature,proto3,oneof" json:"feature,omitempty"`
}

type GeoJson_FeatureCollection struct {
	FeatureCollection *FeatureCollection `protobuf:"bytes,11,opt,name=feature_collection,json=featureCollection,proto3,oneof" json:"featureCollection,omitempty"`
}

func (*GeoJson_Point) isGeoJson_GeoJson() {}

func (*GeoJson_MultiPoint) isGeoJson_GeoJson() {}

func (*GeoJson_LineString) isGeoJson_GeoJson() {}

func (*GeoJson_MultiLineString) isGeoJson_GeoJson() {}

func (*GeoJson_Polygon) isGeoJson_GeoJson() {}

func (*GeoJson_MultiPolygon) isGeoJson_GeoJson() {}

func (*GeoJson_GeometryCollection) isGeoJson_GeoJson() {}

func (*GeoJson_Feature) isGeoJson_GeoJson() {}

func (*GeoJson_FeatureCollection) isGeoJson_GeoJson() {}

var File_mojo_geom_geo_json_proto protoreflect.FileDescriptor

var file_mojo_geom_geo_json_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x67, 0x65, 0x6f, 0x5f,
	0x6a, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x1a, 0x17, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d,
	0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x67, 0x65,
	0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67,
	0x65, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d,
	0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67,
	0x65, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d,
	0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x6f, 0x6a,
	0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x04, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x4a, 0x73, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x48,
	0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69, 0x6e, 0x65, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x4c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x07, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0d, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x13, 0x67, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f,
	0x6d, 0x2e, 0x47, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f,
	0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65,
	0x6f, 0x6d, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x67, 0x65, 0x6f,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x59, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x2e, 0x6d, 0x6f, 0x6a,
	0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x6d, 0x6f, 0x6a, 0x6f, 0x2e, 0x67, 0x65, 0x6f, 0x6d, 0x42,
	0x0c, 0x47, 0x65, 0x6f, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f,
	0x2d, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x6d, 0x6f, 0x6a, 0x6f, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x3b, 0x67, 0x65, 0x6f, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mojo_geom_geo_json_proto_rawDescOnce sync.Once
	file_mojo_geom_geo_json_proto_rawDescData = file_mojo_geom_geo_json_proto_rawDesc
)

func file_mojo_geom_geo_json_proto_rawDescGZIP() []byte {
	file_mojo_geom_geo_json_proto_rawDescOnce.Do(func() {
		file_mojo_geom_geo_json_proto_rawDescData = protoimpl.X.CompressGZIP(file_mojo_geom_geo_json_proto_rawDescData)
	})
	return file_mojo_geom_geo_json_proto_rawDescData
}

var file_mojo_geom_geo_json_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mojo_geom_geo_json_proto_goTypes = []interface{}{
	(*GeoJson)(nil),            // 0: mojo.geom.GeoJson
	(*Point)(nil),              // 1: mojo.geom.Point
	(*MultiPoint)(nil),         // 2: mojo.geom.MultiPoint
	(*LineString)(nil),         // 3: mojo.geom.LineString
	(*MultiLineString)(nil),    // 4: mojo.geom.MultiLineString
	(*Polygon)(nil),            // 5: mojo.geom.Polygon
	(*MultiPolygon)(nil),       // 6: mojo.geom.MultiPolygon
	(*GeometryCollection)(nil), // 7: mojo.geom.GeometryCollection
	(*Feature)(nil),            // 8: mojo.geom.Feature
	(*FeatureCollection)(nil),  // 9: mojo.geom.FeatureCollection
}
var file_mojo_geom_geo_json_proto_depIdxs = []int32{
	1, // 0: mojo.geom.GeoJson.point:type_name -> mojo.geom.Point
	2, // 1: mojo.geom.GeoJson.multi_point:type_name -> mojo.geom.MultiPoint
	3, // 2: mojo.geom.GeoJson.line_string:type_name -> mojo.geom.LineString
	4, // 3: mojo.geom.GeoJson.multi_line_string:type_name -> mojo.geom.MultiLineString
	5, // 4: mojo.geom.GeoJson.polygon:type_name -> mojo.geom.Polygon
	6, // 5: mojo.geom.GeoJson.multi_polygon:type_name -> mojo.geom.MultiPolygon
	7, // 6: mojo.geom.GeoJson.geometry_collection:type_name -> mojo.geom.GeometryCollection
	8, // 7: mojo.geom.GeoJson.feature:type_name -> mojo.geom.Feature
	9, // 8: mojo.geom.GeoJson.feature_collection:type_name -> mojo.geom.FeatureCollection
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_mojo_geom_geo_json_proto_init() }
func file_mojo_geom_geo_json_proto_init() {
	if File_mojo_geom_geo_json_proto != nil {
		return
	}
	file_mojo_geom_feature_proto_init()
	file_mojo_geom_feature_collection_proto_init()
	file_mojo_geom_geom_proto_init()
	file_mojo_geom_line_string_proto_init()
	file_mojo_geom_multi_line_string_proto_init()
	file_mojo_geom_multi_point_proto_init()
	file_mojo_geom_multi_polygon_proto_init()
	file_mojo_geom_point_proto_init()
	file_mojo_geom_polygon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mojo_geom_geo_json_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoJson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mojo_geom_geo_json_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GeoJson_Point)(nil),
		(*GeoJson_MultiPoint)(nil),
		(*GeoJson_LineString)(nil),
		(*GeoJson_MultiLineString)(nil),
		(*GeoJson_Polygon)(nil),
		(*GeoJson_MultiPolygon)(nil),
		(*GeoJson_GeometryCollection)(nil),
		(*GeoJson_Feature)(nil),
		(*GeoJson_FeatureCollection)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mojo_geom_geo_json_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mojo_geom_geo_json_proto_goTypes,
		DependencyIndexes: file_mojo_geom_geo_json_proto_depIdxs,
		MessageInfos:      file_mojo_geom_geo_json_proto_msgTypes,
	}.Build()
	File_mojo_geom_geo_json_proto = out.File
	file_mojo_geom_geo_json_proto_rawDesc = nil
	file_mojo_geom_geo_json_proto_goTypes = nil
	file_mojo_geom_geo_json_proto_depIdxs = nil
}
