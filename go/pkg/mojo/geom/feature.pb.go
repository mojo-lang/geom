// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: mojo/geom/feature.proto

package geom

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/mojo-lang/core/go/pkg/mojo"
	core "github.com/mojo-lang/core/go/pkg/mojo/core"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Feature struct {
	Type                 string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id                   *core.Id               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Geometry             *Geometry              `protobuf:"bytes,3,opt,name=geometry,proto3" json:"geometry,omitempty"`
	Bbox                 *BoundingBox           `protobuf:"bytes,4,opt,name=bbox,proto3" json:"bbox,omitempty"`
	SpatialReference     SpatialReference       `protobuf:"varint,5,opt,name=spatial_reference,json=spatialReference,proto3,enum=mojo.geom.SpatialReference" json:"crs,omitempty"`
	Properties           map[string]*core.Value `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Feature) Reset()         { *m = Feature{} }
func (m *Feature) String() string { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()    {}
func (*Feature) Descriptor() ([]byte, []int) {
	return fileDescriptor_f74071b3958a567f, []int{0}
}
func (m *Feature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Feature.Unmarshal(m, b)
}
func (m *Feature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Feature.Marshal(b, m, deterministic)
}
func (m *Feature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Feature.Merge(m, src)
}
func (m *Feature) XXX_Size() int {
	return xxx_messageInfo_Feature.Size(m)
}
func (m *Feature) XXX_DiscardUnknown() {
	xxx_messageInfo_Feature.DiscardUnknown(m)
}

var xxx_messageInfo_Feature proto.InternalMessageInfo

func (m *Feature) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Feature) GetId() *core.Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Feature) GetGeometry() *Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *Feature) GetBbox() *BoundingBox {
	if m != nil {
		return m.Bbox
	}
	return nil
}

func (m *Feature) GetSpatialReference() SpatialReference {
	if m != nil {
		return m.SpatialReference
	}
	return SpatialReference_SPATIAL_REFERENCE_UNSPECIFIED
}

func (m *Feature) GetProperties() map[string]*core.Value {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*Feature)(nil), "mojo.geom.Feature")
	proto.RegisterMapType((map[string]*core.Value)(nil), "mojo.geom.Feature.PropertiesEntry")
}

func init() { proto.RegisterFile("mojo/geom/feature.proto", fileDescriptor_f74071b3958a567f) }

var fileDescriptor_f74071b3958a567f = []byte{
	// 460 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xdb, 0x8a, 0xd3, 0x40,
	0x18, 0x26, 0x6d, 0x77, 0x75, 0x67, 0x0f, 0xed, 0xce, 0xae, 0x35, 0x54, 0x21, 0x75, 0x15, 0xe9,
	0x85, 0x4e, 0xa0, 0xde, 0x88, 0x0b, 0x5e, 0x0c, 0xe8, 0xe2, 0x5d, 0xa9, 0x20, 0x28, 0xc2, 0x92,
	0xc3, 0x6c, 0x1c, 0xdb, 0x64, 0xc2, 0x64, 0xaa, 0xcd, 0x0b, 0xf9, 0x30, 0xde, 0xf8, 0x06, 0x79,
	0x80, 0x3c, 0x85, 0xfc, 0x93, 0x69, 0x32, 0x74, 0x6f, 0x02, 0xf3, 0x7f, 0x87, 0x7c, 0xf3, 0xcf,
	0x87, 0x1e, 0xa7, 0xe2, 0xa7, 0xf0, 0x13, 0x26, 0x52, 0xff, 0x8e, 0x05, 0x6a, 0x23, 0x19, 0xc9,
	0xa5, 0x50, 0x02, 0x1f, 0x01, 0x40, 0x00, 0x98, 0x60, 0xcd, 0x89, 0x84, 0x64, 0x3e, 0x8f, 0x1b,
	0x78, 0xf2, 0xa8, 0x9b, 0xfd, 0x0a, 0xd6, 0x1b, 0xa3, 0x9a, 0x3c, 0xed, 0xec, 0x42, 0xb1, 0xc9,
	0x62, 0x9e, 0x25, 0xb7, 0xa1, 0xd8, 0x1a, 0xf4, 0xb2, 0x43, 0xe1, 0x63, 0xa6, 0xcf, 0xba, 0x69,
	0x91, 0x07, 0x8a, 0x07, 0xeb, 0x5b, 0xc9, 0xee, 0x98, 0x64, 0x59, 0xb4, 0xb3, 0x1d, 0x6a, 0x8a,
	0x4e, 0xa4, 0x07, 0x57, 0x7f, 0x06, 0xe8, 0xc1, 0xc7, 0x26, 0x2f, 0x7e, 0x89, 0x06, 0xaa, 0xcc,
	0x99, 0xeb, 0x4c, 0x9d, 0xd9, 0x11, 0xc5, 0x75, 0xe5, 0x9d, 0xc1, 0xf9, 0x95, 0x48, 0xb9, 0x62,
	0x69, 0xae, 0xca, 0xa5, 0xc6, 0xb1, 0x8f, 0x7a, 0x3c, 0x76, 0x7b, 0x53, 0x67, 0x76, 0x3c, 0x3f,
	0x25, 0xda, 0x0c, 0xf2, 0x93, 0x4f, 0x31, 0x1d, 0xd5, 0x95, 0x77, 0xc2, 0x63, 0x4b, 0xd2, 0xe3,
	0x31, 0xbe, 0x41, 0x0f, 0x21, 0x15, 0x53, 0xb2, 0x74, 0xfb, 0x5a, 0x76, 0x41, 0xda, 0xad, 0x90,
	0x1b, 0x03, 0xd1, 0x71, 0x5d, 0x79, 0x78, 0x47, 0xb4, 0x2c, 0x5a, 0x31, 0x7e, 0x8f, 0x06, 0x61,
	0x28, 0xb6, 0xee, 0x40, 0x9b, 0x8c, 0x2d, 0x13, 0x6a, 0x96, 0x44, 0xc5, 0xb6, 0x49, 0x0e, 0x3c,
	0x3b, 0x39, 0x9c, 0x71, 0x88, 0xce, 0xef, 0x6d, 0xc6, 0x3d, 0x98, 0x3a, 0xb3, 0xb3, 0xf9, 0x13,
	0xcb, 0xec, 0x73, 0xc3, 0x59, 0xee, 0x28, 0xd4, 0xad, 0x2b, 0xef, 0x34, 0x92, 0x45, 0x67, 0xf8,
	0xf7, 0xdf, 0x8b, 0x7e, 0x24, 0x8b, 0xe5, 0xa8, 0xd8, 0xe3, 0xe2, 0xef, 0x08, 0xe5, 0x52, 0xe4,
	0x4c, 0x2a, 0xce, 0x0a, 0xf7, 0x70, 0xda, 0x9f, 0x1d, 0xcf, 0xaf, 0x2c, 0x73, 0xb3, 0x6d, 0xb2,
	0x68, 0x49, 0x1f, 0x32, 0xb8, 0x3d, 0xfc, 0xe3, 0xb2, 0x53, 0x5a, 0xd9, 0x2d, 0xbf, 0xc9, 0x6f,
	0x34, 0xdc, 0x13, 0xe2, 0xe7, 0xa8, 0xbf, 0x62, 0xa5, 0x79, 0xb5, 0x73, 0x48, 0xba, 0x62, 0xf6,
	0xfa, 0x00, 0xc5, 0xd7, 0xe8, 0x40, 0xd7, 0xcb, 0x3c, 0xdb, 0xc8, 0x7a, 0xb6, 0x2f, 0x30, 0xa7,
	0x17, 0x75, 0xe5, 0x0d, 0x35, 0xc5, 0x92, 0x36, 0x9a, 0x77, 0xbd, 0xb7, 0x0e, 0xfd, 0x8a, 0xc6,
	0x42, 0x26, 0x5a, 0xb6, 0x0e, 0xb2, 0xa4, 0xbb, 0x10, 0x3d, 0x31, 0x37, 0x5a, 0x40, 0xa1, 0x16,
	0xce, 0x37, 0x3f, 0xe1, 0xea, 0xc7, 0x26, 0x24, 0x91, 0x48, 0x75, 0xd3, 0x5e, 0x03, 0xdf, 0x94,
	0x55, 0xf8, 0xf9, 0x2a, 0xf1, 0xdb, 0x9e, 0x5e, 0xc3, 0x27, 0x3c, 0xd4, 0x55, 0x7c, 0xf3, 0x3f,
	0x00, 0x00, 0xff, 0xff, 0xff, 0x62, 0xed, 0xc2, 0x43, 0x03, 0x00, 0x00,
}
